# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      # Can we use '**.md' ?
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'CODE_OF_CONDUCT.md'
      - 'app/README.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Manage cache
      uses: actions/cache@v2.0.0
      with:
        path: app/node_modules
        key: covid-v2

    - name: yarn install and test
      env:
        REACT_APP_MAP_STATIC_HOST: https://emibcn.github.io/covid-data/Maps
        REACT_APP_CHART_STATIC_HOST: https://emibcn.github.io/covid-data/Charts
      run: |
        cd app
        yarn install
        # Disabled exit until we reach at least 50% coverage
        yarn test --color --coverage || true
        # Ensure we can build
        yarn build
        yarn clean

    # Coverage badges will be updated on any branch
    # and saved into a dedicated one
    - name: Check test coverage
      uses: johanvanhelden/gha-clover-test-coverage-check@v1
      id: coverage
      with:
        percentage: 50
        exit: 0
        rounded-precision: 2
        filename: "app/coverage/clover.xml"

    - name: Extract branch name
      shell: bash
      run: |
        TMP_PULL_HEAD_REF="${{ github.head_ref }}"
        TMP_GITHUB_REF="${GITHUB_REF#refs/heads/}"
        EXPORT_VALUE=""
        if [ "${TMP_PULL_HEAD_REF}" != "" ]
        then
            EXPORT_VALUE="${TMP_PULL_HEAD_REF}"
        else
            EXPORT_VALUE="${TMP_GITHUB_REF}"
        fi
        echo "##[set-output name=branch;]$(echo ${EXPORT_VALUE})"
      id: extract_branch

    - uses: actions/checkout@v2
      if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/master' }}
      with:
        ref: badges

    # Use the output from the `coverage` step
    - name: Generate the badge SVG image
      if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/master' }}
      uses: emibcn/badge-action@v1
      id: badge
      with:
        label: 'Coverage'
        status: ${{ steps.coverage.outputs.coverage-rounded-display }}
        color: ${{
          steps.coverage.outputs.coverage > 90 && 'green'              ||
          steps.coverage.outputs.coverage > 80 && 'yellow,green'       ||
          steps.coverage.outputs.coverage > 70 && 'yellow'             ||
          steps.coverage.outputs.coverage > 60 && 'orange,yellow'      ||
          steps.coverage.outputs.coverage > 50 && 'orange'             ||
          steps.coverage.outputs.coverage > 40 && 'red,orange'         ||
          steps.coverage.outputs.coverage > 30 && 'red,red,orange'     ||
          steps.coverage.outputs.coverage > 20 && 'red,red,red,orange' ||
          'red' }}
        path: test-coverage.svg

    - name: Commit badge
      if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/master' }}
      env:
        BRANCH: ${{ steps.extract_branch.outputs.branch }}
        FILE: 'test-coverage.svg'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        mkdir -p "${BRANCH}"
        mv "${FILE}" "${BRANCH}"
        git add "${BRANCH}/${FILE}"

        # Will give error if badge did not changed
        git commit -m "Add/Update badge" || true
    - name: Push badge commit
      if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/master' }}
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: badges


  publish:

    # Only publish if all these conditions are met:
    # - The previous step ended successfully
    # - This is a push event
    # - The push event is on branch 'master'
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Manage cache
      uses: actions/cache@v2.0.0
      with:
        path: app/node_modules
        key: covid-v2

    - name: yarn install and build
      env:
        REACT_APP_MAP_STATIC_HOST: https://emibcn.github.io/covid-data/Maps
        REACT_APP_CHART_STATIC_HOST: https://emibcn.github.io/covid-data/Charts
      run: |
        cd app
        yarn install
        yarn build

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: docs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
